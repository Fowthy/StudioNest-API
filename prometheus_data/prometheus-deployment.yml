apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: default
  namespace: monitoring
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-database-claim
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: gp2
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-database-deployment
  namespace: monitoring
  labels:
    app: prometheus-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-database
  template:
    metadata:
      labels:
        app: prometheus-database
    spec:
      volumes:
        - name: prometheus-database-volume
          persistentVolumeClaim:
            claimName: prometheus-database-claim
        - name: config
          configMap:
            name: config
      containers:
        - name: prometheus-database
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-database-volume
              mountPath: /prometheus
            - name: config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-database-service
  namespace: monitoring
spec:
  selector:
    app: prometheus-database
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
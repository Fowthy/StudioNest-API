apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: api
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: api
    template:
      metadata:
        labels:
          app: api
      spec:
        containers:
        - name: api
          image: "{{ .Values.api.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: roomman
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: roomman
    template:
      metadata:
        labels:
          app: roomman
      spec:
        containers:
        - name: roomman
          image: "{{ .Values.roomman.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 8812
          env:
          - name: MONGODB
            value: "{{ .Values.roomman.mongodb }}"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: booking
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: booking
    template:
      metadata:
        labels:
          app: booking
      spec:
        containers:
        - name: booking
          image: "{{ .Values.booking.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 8813
          env:
          - name: MONGODB
            value: "{{ .Values.booking.mongodb }}"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: user
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: user
    template:
      metadata:
        labels:
          app: user
      spec:
        containers:
        - name: user
          image: "{{ .Values.user.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 8815
          env:
          - name: MONGODB
            value: "{{ .Values.user.mongodb }}"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: contentlib
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: contentlib
    template:
      metadata:
        labels:
          app: contentlib
      spec:
        containers:
        - name: contentlib
          image: "{{ .Values.contentlib.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 8821
          env:
          - name: MONGODB
            value: "{{ .Values.contentlib.mongodb }}"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: payment
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: payment
    template:
      metadata:
        labels:
          app: payment
      spec:
        containers:
        - name: payment
          image: "{{ .Values.payment.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 8817
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: auth
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: auth
    template:
      metadata:
        labels:
          app: auth
      spec:
        containers:
        - name: auth
          image: "{{ .Values.auth.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 8491
          env:
          - name: MONGODB
            value: "{{ .Values.auth.mongodb }}"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: client
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: client
    template:
      metadata:
        labels:
          app: client
      spec:
        containers:
        - name: client
          image: "{{ .Values.client.image }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 3000
          env:
          - name: HOST
            value: "{{ .Values.client.host }}"
